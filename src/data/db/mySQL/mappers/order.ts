import { Mapper } from '../../../../application/base';
import { OrderBaseModel } from '../../../entities';
import { OrderMySQL } from '../models';

export class OrderMapperMySQL extends Mapper<OrderMySQL, OrderBaseModel> {
  mapFrom(param: OrderMySQL): OrderBaseModel {
    return {
      id: param.Id.toString(),
      customOrderNumber: param.CustomOrderNumber.toString(),
      billingAddressId: param.CustomOrderNumber.toString(),
      customerId: param.CustomerId.toString(),
      pickupAddressId: param.PickupAddressId,
      shippingAddressId: param.ShippingAddressId,
      orderGuid: param.OrderGuid.toString(),
      storeId: param.StoreId.toString(),
      pickupInStore: param.PickupInStore.toString(),
      orderStatusId: param.OrderStatusId.toString(),
      shippingStatusId: param.ShippingStatusId.toString(),
      paymentStatusId: param.PaymentStatusId.toString(),
      paymentMethodSystemName: param.PaymentMethodSystemName,
      customerCurrencyCode: param.CustomerCurrencyCode,
      currencyRate: param.CurrencyRate,
      customerTaxDisplayTypeId: param.CustomerTaxDisplayTypeId.toString(),
      vatNumber: param.VatNumber,
      orderSubtotalInclTax: param.OrderSubtotalInclTax,
      orderSubtotalExclTax: param.OrderSubtotalExclTax,
      orderSubTotalDiscountInclTax: param.OrderSubTotalDiscountInclTax,
      orderSubTotalDiscountExclTax: param.OrderSubTotalDiscountExclTax,
      orderShippingInclTax: param.OrderShippingInclTax,
      orderShippingExclTax: param.OrderShippingExclTax,
      paymentMethodAdditionalFeeInclTax: param.PaymentMethodAdditionalFeeInclTax,
      paymentMethodAdditionalFeeExclTax: param.PaymentMethodAdditionalFeeExclTax,
      taxRates: param.TaxRates,
      orderTax: param.OrderTax,
      orderDiscount: param.OrderDiscount,
      orderTotal: param.OrderTotal,
      refundedAmount: param.RefundedAmount,
      rewardPointsHistoryEntryId: param.RewardPointsHistoryEntryId,
      checkoutAttributeDescription: param.CheckoutAttributeDescription,
      checkoutAttributesXml: param.CheckoutAttributesXml,
      customerLanguageId: param.CustomerLanguageId.toString(),
      affiliateId: param.AffiliateId,
      customerIp: param.CustomerIp,
      allowStoringCreditCardNumber: param.AllowStoringCreditCardNumber,
      cardType: param.CardType,
      cardName: param.CardName,
      cardNumber: param.CardNumber,
      maskedCreditCardNumber: param.MaskedCreditCardNumber,
      cardCvv2: param.CardCvv2,
      cardExpirationMonth: param.CardExpirationMonth,
      cardExpirationYear: param.CardExpirationYear,
      authorizationTransactionId: param.AuthorizationTransactionId,
      authorizationTransactionCode: param.AuthorizationTransactionCode,
      authorizationTransactionResult: param.AuthorizationTransactionResult,
      captureTransactionId: param.CaptureTransactionId,
      captureTransactionResult: param.CaptureTransactionResult,
      subscriptionTransactionId: param.SubscriptionTransactionId,
      paidDateUtc: param.PaidDateUtc,
      shippingMethod: param.ShippingMethod,
      shippingRateComputationMethodSystemName: param.ShippingRateComputationMethodSystemName,
      customValuesXml: param.CustomValuesXml,
      deleted: param.Deleted,
      createdOnUtc: param.CreatedOnUtc,
      redeemedRewardPointsEntryId: param.RedeemedRewardPointsEntryId,
    };
  }

  mapTo(param: OrderBaseModel): OrderMySQL {
    return {
      Id: param.id.toString(),
      CustomOrderNumber: param.customOrderNumber.toString(),
      BillingAddressId: param.customOrderNumber.toString(),
      CustomerId: param.customerId.toString(),
      PickupAddressId: param.pickupAddressId,
      ShippingAddressId: param.shippingAddressId,
      OrderGuid: param.orderGuid.toString(),
      StoreId: param.storeId.toString(),
      PickupInStore: param.pickupInStore.toString(),
      OrderStatusId: param.orderStatusId.toString(),
      ShippingStatusId: param.shippingStatusId.toString(),
      PaymentStatusId: param.paymentStatusId.toString(),
      PaymentMethodSystemName: param.paymentMethodSystemName,
      CustomerCurrencyCode: param.customerCurrencyCode,
      CurrencyRate: param.currencyRate,
      CustomerTaxDisplayTypeId: param.customerTaxDisplayTypeId.toString(),
      VatNumber: param.vatNumber,
      OrderSubtotalInclTax: param.orderSubtotalInclTax,
      OrderSubtotalExclTax: param.orderSubtotalExclTax,
      OrderSubTotalDiscountInclTax: param.orderSubTotalDiscountInclTax,
      OrderSubTotalDiscountExclTax: param.orderSubTotalDiscountExclTax,
      OrderShippingInclTax: param.orderShippingInclTax,
      OrderShippingExclTax: param.orderShippingExclTax,
      PaymentMethodAdditionalFeeInclTax: param.paymentMethodAdditionalFeeInclTax,
      PaymentMethodAdditionalFeeExclTax: param.paymentMethodAdditionalFeeExclTax,
      TaxRates: param.taxRates,
      OrderTax: param.orderTax,
      OrderDiscount: param.orderDiscount,
      OrderTotal: param.orderTotal,
      RefundedAmount: param.refundedAmount,
      RewardPointsHistoryEntryId: param.rewardPointsHistoryEntryId,
      CheckoutAttributeDescription: param.checkoutAttributeDescription,
      CheckoutAttributesXml: param.checkoutAttributesXml,
      CustomerLanguageId: param.customerLanguageId.toString(),
      AffiliateId: param.affiliateId,
      CustomerIp: param.customerIp,
      AllowStoringCreditCardNumber: param.allowStoringCreditCardNumber,
      CardType: param.cardType,
      CardName: param.cardName,
      CardNumber: param.cardNumber,
      MaskedCreditCardNumber: param.maskedCreditCardNumber,
      CardCvv2: param.cardCvv2,
      CardExpirationMonth: param.cardExpirationMonth,
      CardExpirationYear: param.cardExpirationYear,
      AuthorizationTransactionId: param.authorizationTransactionId,
      AuthorizationTransactionCode: param.authorizationTransactionCode,
      AuthorizationTransactionResult: param.authorizationTransactionResult,
      CaptureTransactionId: param.captureTransactionId,
      CaptureTransactionResult: param.captureTransactionResult,
      SubscriptionTransactionId: param.subscriptionTransactionId,
      PaidDateUtc: param.paidDateUtc,
      ShippingMethod: param.shippingMethod,
      ShippingRateComputationMethodSystemName: param.shippingRateComputationMethodSystemName,
      CustomValuesXml: param.customValuesXml,
      Deleted: param.deleted,
      CreatedOnUtc: param.createdOnUtc,
      RedeemedRewardPointsEntryId: param.redeemedRewardPointsEntryId,
    };
  }
}
